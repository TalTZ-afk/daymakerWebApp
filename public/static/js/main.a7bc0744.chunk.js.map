{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","NewTodoFormHe.js","TodoListHe.js","UI.js","UIHe.js","App.js","serviceWorker.js","index.js"],"names":["NewTodoForm","props","state","task","currentDate","Date","chosenDate","handleChange","bind","handleSubmit","handleChangeDate","evt","this","setState","target","name","value","preventDefault","currentList","createTodo","id","uuid","completed","date","getDate","getMonth","getFullYear","className","onSubmit","htmlFor","type","placeholder","onChange","selected","minDate","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","customInput","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleDateUpdate","handleToggle","removeTodo","updateTodo","updateDate","toggleTodo","result","undefined","CSSTransition","key","timeout","classNames","style","background","color","marginRight","language","marginTop","onClick","dateExpired","TransitionGroup","TodoList","fullDate","printDayAndMonth","yesterday","yesterdayDate","handleCreate","handleToggleCompletion","handleTodoToday","removeTodoYesterday","printColor","alertTodoYesterday","month","getDay","day","user","newTodo","create","updatedTask","isDate","update","toggleCompletion","isPlannedDelete","delete","plannedTodo","count","lists","todos","map","todo","_id","length","doPlannedTodo","handleAlertedTodo","locale","slice","NewTodoFormHe","TodoListHe","copyPlannedTodo","UI","listIcon","getHours","untitledListCount","listName","changeCurrentList","creatNewList","handleColorChange","changeLang","event","currentTarget","addList","updateListName","removeList","changeColor","src","image","onExpandClick","animation","expand","alt","fullName","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","list","index","toString","maxLength","UIHe","App","getUserFromDb","getUrl","window","location","fetch","then","response","json","res","userData","boolean","remove","handleExpandClick","handleChangeCurrentList","handleAddList","handleRemoveList","handleListNameUpdate","handleChangeColor","handleChangeLang","ms","Promise","resolve","setTimeout","axios","post","userId","objIdsToUpdate","filter","t","idToUpdate","data","objIdsToDelete","idToDelete","newCurrentList","listId","newListName","getURL","colorId","direction","Boolean","hostname","match","document","getElementById","innerHTML","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7bc0744.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport uuid from \"uuid/v4\";\nimport DatePicker from \"react-datepicker\";\nimport \"./NewTodoForm.css\";\n\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      task: \"\",\n      currentDate: new Date(),\n      chosenDate: new Date()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    if(this.props.currentList === \"1\") {\n      this.props.createTodo({ task: this.state.task, chosenDate: this.state.chosenDate, id: uuid(), completed: false });\n    } else {\n      this.props.createTodo({ task: this.state.task, id: uuid(), completed: false });\n    }\n    this.setState({ task: \"\" });\n  }\n\n  handleChangeDate(date) {\n    this.setState({\n      chosenDate: date.getDate() + \"/\" + \"\" + 0 + (date.getMonth() + 1) + \"/\" + date.getFullYear()\n    });\n  }\n\n  render() {\n    if(this.props.currentList === \"1\") {\n      return (\n        <form className=\"NewTodoForm\" id=\"expand-press\" onSubmit={this.handleSubmit}>\n          <label id=\"expand-press\" htmlFor=\"task\">New Todo</label>\n          <input\n            type=\"text\"\n            placeholder=\"New Todo\"\n            id=\"task\"\n            name=\"task\"\n            value={this.state.task}\n            onChange={this.handleChange}\n          />\n          <DatePicker \n            selected={this.state.currentDate}\n            onChange={this.handleChangeDate}\n            minDate={new Date()}\n            showYearDropdown\n            yearDropdownItemNumber={15}\n            scrollableYearDropdown\n            customInput={<button id=\"expand-press\" type=\"button\" className=\"btn-calendar-open\"><i className=\"far fa-calendar-alt\"></i></button>}\n          />\n          <button id=\"expand-press\" className=\"add-todo\">Add Todo</button>\n        </form>\n      );\n    } else {\n      return (\n        <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"task\">New Todo</label>\n          <input\n            type=\"text\"\n            placeholder=\"New Todo\"\n            id=\"task\"\n            name=\"task\"\n            value={this.state.task}\n            onChange={this.handleChange}\n          />\n          <button id=\"expand-press\" className=\"add-todo\">Add Todo</button>\n        </form>\n      );\n    }\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task,\n      date: \"\"\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDateUpdate = this.handleDateUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id, false);\n  }\n\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  handleUpdate(evt) {\n    evt.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  }\n\n  handleDateUpdate(evt) {\n    evt.preventDefault();\n    this.props.updateDate(this.props.id, this.state.date, true);\n    this.setState({ isEditing: false });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      if(this.props.chosenDate !== undefined) {\n        result = (\n          <CSSTransition key=\"editing\" timeout={500} classNames=\"form\">\n            <div>\n              <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n                <input\n                  type=\"text\"\n                  value={this.state.task}\n                  name=\"task\"\n                  onChange={this.handleChange}\n                />\n                <button \n                  style={{\n                    background: this.props.color, \n                    marginRight: this.props.language === \"en\" ? \"\" : \"5px\"\n                  }}\n                >\n                  {this.props.language === \"en\" ? \"save\" : \"שמור\"}\n                </button>\n              </form>\n\n              <form className=\"Todo-edit-form\" onSubmit={this.handleDateUpdate}>\n                <input\n                  className=\"dateUpdateInput\"\n                  type=\"text\"\n                  name=\"date\"\n                  onChange={this.handleChange}\n                  placeholder=\"dd/mm/yyyy\"\n                />\n                <button \n                  style={{\n                    background: this.props.color, \n                    marginRight: this.props.language === \"en\" ? \"\" : \"5px\",\n                    marginTop: \"5px\"\n                  }}\n                >\n                  {this.props.language === \"en\" ? \"save\" : \"שמור\"}\n                </button>\n              </form>\n            </div>\n          </CSSTransition>\n        );\n      } else {\n        result = (\n          <CSSTransition key=\"editing\" timeout={500} classNames=\"form\">\n            <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n              <input\n                type=\"text\"\n                value={this.state.task}\n                name=\"task\"\n                onChange={this.handleChange}\n              />\n              <button \n                style={{\n                  background: this.props.color, \n                  marginRight: this.props.language === \"en\" ? \"\" : \"5px\"\n                }}\n              >\n                {this.props.language === \"en\" ? \"save\" : \"שמור\"}\n              </button>\n            </form>\n          </CSSTransition>\n        );\n      }\n    } else {\n      result = (\n        <CSSTransition key=\"normal\" timeout={500} classNames=\"task-text\">\n          <div>\n          <li className={this.props.language === \"en\" ? \"Todo-task\" : \"Todo-task-he\"}  id=\"expand-press\" onClick={this.handleToggle}>\n            {this.props.task}\n            <h6 style={{color: (this.props.dateExpired !== undefined && this.props.dateExpired) ? \"red\" : \"white\"}}>{ this.props.chosenDate && this.props.chosenDate }</h6>\n          </li>\n          <div className={this.props.language === \"en\" ? \"Todo-buttons\" : \"Todo-buttons-he\"}>\n            <button onClick={this.toggleForm}>\n              <i className=\"fas fa-pen\" />\n            </button>\n            <button onClick={this.handleRemove}>\n              <i className=\"fas fa-trash\" />\n            </button>\n          </div>\n          </div>\n        </CSSTransition>\n      );\n    }\n    return (\n      <TransitionGroup\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}  id=\"expand-press\"\n      >\n        {result}\n        \n      </TransitionGroup>\n    );\n  }\n}\nexport default Todo;\n","import React, { Component } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\nimport \"./TodoListHe.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.printDayAndMonth = this.printDayAndMonth.bind(this);\n    this.handleTodoToday = this.handleTodoToday.bind(this);\n    this.removeTodoYesterday = this.removeTodoYesterday.bind(this);\n    this.printColor = this.printColor.bind(this);\n    this.alertTodoYesterday = this.alertTodoYesterday.bind(this);\n  }\n\n  date = new Date().getDate();\n  day;\n  month;\n  fullDate = this.printDayAndMonth() + this.date;\n\n  yesterday = new Date().getDate() - 1;\n  currentDate = new Date().getDate() + \"/\" + \"\" + 0 + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n  yesterdayDate = this.yesterday + \"/\" + \"\" + 0 + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n  printDayAndMonth() {\n    \n    switch (new Date().getMonth()) {\n      case 0:\n        this.month = \"January\";\n        break;\n      case 1:\n        this.month = \"February\";\n        break;\n      case 2:\n        this.month = \"March\";\n        break;\n      case 3:\n        this.month = \"April\";\n        break;\n      case 4:\n        this.month = \"May\";\n        break;\n      case 5:\n        this.month = \"June\";\n        break;\n      case 6:\n        this.month = \"July\";\n        break;\n      case 7:\n        this.month = \"August\";\n        break;\n      case 8:\n        this.month = \"September\";\n        break;\n      case 9:\n        this.month = \"October\";\n        break;\n      case 10:\n        this.month = \"November\";\n        break;\n      default:\n        this.month = \"December\";\n    }\n\n    switch (new Date().getDay()) {\n      case 0:\n        this.day = \"Sunday\";\n        break;\n      case 1:\n        this.day = \"Monday\";\n        break;\n      case 2:\n        this.day = \"Tuesday\";\n        break;\n      case 3:\n        this.day = \"Wednesday\";\n        break;\n      case 4:\n        this.day = \"Thursday\";\n        break;\n      case 5:\n        this.day = \"Friday\";\n        break;\n      default:\n        this.day = \"Saturday\";\n    }\n    return (this.day + \", \" + this.month + \" \");\n  }\n\n  color = \"\";\n\n  printColor() {\n    switch(this.props.user.color) {\n      case \"blue\":\n        this.color = \"#38b2f8\";\n        break;\n      case \"green\":\n        this.color = \"#42e6a4\";\n        break;\n      case \"black\":\n        this.color = \"black\";\n        break;\n      default:\n        this.color = \"#FF6666\";\n    }\n    return this.color;\n  }\n\n  handleCreate(newTodo) {\n    this.props.create(newTodo);\n  }\n\n  handleUpdate(id, updatedTask, isDate) {\n    this.props.update(id, updatedTask, isDate);\n  }\n\n  handleToggleCompletion(id) {\n    this.props.toggleCompletion(id);\n  }\n\n  handleRemove(id, isPlannedDelete) {\n    this.props.delete(id, isPlannedDelete);\n  }\n\n  handleTodoToday(plannedTodo) {\n    let count = 0;\n    this.props.user.lists[0].todos.map(todo => (\n      todo._id !== plannedTodo._id && count++\n    ));\n    if(count === this.props.user.lists[0].todos.length) {\n      this.props.doPlannedTodo(plannedTodo);\n    }\n  }\n\n  removeTodoYesterday(plannedTodo) {\n    this.props.delete(plannedTodo._id, true);\n  }\n\n  alertTodoYesterday(plannedTodo) {\n    this.props.handleAlertedTodo(plannedTodo._id, true);\n  }\n\n  render() {\n    this.props.user.lists[1].todos.map(plannedTodo => (\n      plannedTodo.chosenDate === this.currentDate && (this.handleTodoToday(plannedTodo))\n    ));\n\n    this.props.user.lists[0].todos.map(plannedTodo => {\n      if(plannedTodo.chosenDate !== undefined) {\n        if(plannedTodo.chosenDate === this.yesterdayDate) {\n          if(plannedTodo.completed) {\n            return this.removeTodoYesterday(plannedTodo);\n          } else {\n            if(plannedTodo.dateExpired === false) {\n              return this.alertTodoYesterday(plannedTodo);\n            }\n          }\n        }\n      }\n    });\n\n    const todos = this.props.user.lists[this.props.currentList].todos.map(todo => {\n      return (\n        <CSSTransition key={todo._id} timeout={500} classNames='todo'>\n          <Todo\n            key={todo._id}\n            id={todo._id}\n            task={todo.todo}\n            completed={todo.completed}\n            chosenDate={todo.chosenDate}\n            color={this.printColor()}\n            language={this.props.user.locale === undefined ? this.props.user.language.slice(0, 2) : this.props.user.locale}\n            dateExpired={todo.dateExpired}\n            removeTodo={this.handleRemove}\n            updateTodo={this.handleUpdate}\n            updateDate={this.handleUpdate}\n            toggleTodo={this.handleToggleCompletion}\n          />\n        </CSSTransition>\n      );\n    });\n    return (\n      <div className=\"TodoList\" id=\"expand-press\" style={{background: this.printColor()}}>\n        {\n          this.props.user.lists[this.props.currentList].name === \"Today\" ? \n            <div>\n            <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\n            <h4  id=\"expand-press\">{this.fullDate}</h4>\n            </div>\n          :\n            <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\n        }\n        \n        <NewTodoForm currentList={this.props.currentList} createTodo={this.handleCreate} />\n\n        <ul>\n          <TransitionGroup className=\"todo-list\">{todos}</TransitionGroup>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./NewTodoFormHe.css\";\r\n\r\nclass NewTodoFormHe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      task: \"\",\r\n      currentDate: new Date(),\r\n      chosenDate: new Date()\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangeDate = this.handleChangeDate.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if(this.props.currentList === \"1\") {\r\n      this.props.createTodo({ task: this.state.task, chosenDate: this.state.chosenDate, id: uuid(), completed: false });\r\n    } else {\r\n      this.props.createTodo({ task: this.state.task, id: uuid(), completed: false });\r\n    }\r\n    this.setState({ task: \"\" });\r\n  }\r\n\r\n  handleChangeDate(date) {\r\n    this.setState({\r\n      chosenDate: date.getDate() + \"/\" + \"\" + 0 + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.props.currentList === \"1\") {\r\n      return (\r\n        <form className=\"NewTodoForm-he\" id=\"expand-press\" onSubmit={this.handleSubmit}>\r\n          <label id=\"expand-press\" htmlFor=\"task\">משימה חדשה</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"משימה חדשה\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n          <DatePicker \r\n            selected={this.state.currentDate}\r\n            onChange={this.handleChangeDate}\r\n            minDate={new Date()}\r\n            showYearDropdown\r\n            yearDropdownItemNumber={15}\r\n            scrollableYearDropdown\r\n            customInput={<button id=\"expand-press\" type=\"button\" className=\"btn-calendar-open\"><i className=\"far fa-calendar-alt\"></i></button>}\r\n          />\r\n          <button id=\"expand-press\" className=\"add-todo\">הוסף משימה</button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <form className=\"NewTodoForm-he\" onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"task\">משימה חדשה</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"משימה חדשה\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button id=\"expand-press\" className=\"add-todo\">הוסף משימה</button>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default NewTodoFormHe;\r\n","import React, { Component } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport NewTodoFormHe from \"./NewTodoFormHe\";\r\nimport Todo from \"./Todo\";\r\nimport \"./TodoList.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TodoListHe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCreate = this.handleCreate.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.printDayAndMonth = this.printDayAndMonth.bind(this);\r\n    this.handleTodoToday = this.handleTodoToday.bind(this);\r\n    this.removeTodoYesterday = this.removeTodoYesterday.bind(this);\r\n    this.printColor = this.printColor.bind(this);\r\n    this.alertTodoYesterday = this.alertTodoYesterday.bind(this);\r\n  }\r\n\r\n  date = new Date().getDate();\r\n  day;\r\n  month;\r\n  fullDate = this.printDayAndMonth() + this.date;\r\n\r\n  yesterday = new Date().getDate() - 1;\r\n  currentDate = new Date().getDate() + \"/\" + \"\" + 0 + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\r\n  yesterdayDate = this.yesterday + \"/\" + \"\" + 0 + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\r\n\r\n  printDayAndMonth() {\r\n    \r\n    switch (new Date().getMonth()) {\r\n      case 0:\r\n        this.month = \"ינואר\";\r\n        break;\r\n      case 1:\r\n        this.month = \"פברואר\";\r\n        break;\r\n      case 2:\r\n        this.month = \"מרץ\";\r\n        break;\r\n      case 3:\r\n        this.month = \"אפריל\";\r\n        break;\r\n      case 4:\r\n        this.month = \"מאי\";\r\n        break;\r\n      case 5:\r\n        this.month = \"יוני\";\r\n        break;\r\n      case 6:\r\n        this.month = \"יולי\";\r\n        break;\r\n      case 7:\r\n        this.month = \"אוגוסט\";\r\n        break;\r\n      case 8:\r\n        this.month = \"ספטמבר\";\r\n        break;\r\n      case 9:\r\n        this.month = \"אוקטובר\";\r\n        break;\r\n      case 10:\r\n        this.month = \"נובמבר\";\r\n        break;\r\n      default:\r\n        this.month = \"דמצמבר\";\r\n    }\r\n\r\n    switch (new Date().getDay()) {\r\n      case 0:\r\n        this.day = \"ראשון\";\r\n        break;\r\n      case 1:\r\n        this.day = \"שני\";\r\n        break;\r\n      case 2:\r\n        this.day = \"שלישי\";\r\n        break;\r\n      case 3:\r\n        this.day = \"רביעי\";\r\n        break;\r\n      case 4:\r\n        this.day = \"חמישי\";\r\n        break;\r\n      case 5:\r\n        this.day = \"שישי\";\r\n        break;\r\n      default:\r\n        this.day = \"שבת\";\r\n    }\r\n    return (this.day + \", \" + this.month + \" \");\r\n  }\r\n\r\n  color = \"\";\r\n\r\n  printColor() {\r\n    switch(this.props.user.color) {\r\n      case \"blue\":\r\n        this.color = \"#38b2f8\";\r\n        break;\r\n      case \"green\":\r\n        this.color = \"#42e6a4\";\r\n        break;\r\n      case \"black\":\r\n        this.color = \"black\";\r\n        break;\r\n      default:\r\n        this.color = \"#FF6666\";\r\n    }\r\n    return this.color;\r\n  }\r\n\r\n  handleCreate(newTodo) {\r\n    this.props.create(newTodo);\r\n  }\r\n\r\n  handleUpdate(id, updatedTask, isDate) {\r\n    this.props.update(id, updatedTask, isDate);\r\n  }\r\n\r\n  handleToggleCompletion(id) {\r\n    this.props.toggleCompletion(id);\r\n  }\r\n\r\n  handleRemove(id, isPlannedDelete) {\r\n    this.props.delete(id, isPlannedDelete);\r\n  }\r\n\r\n  handleTodoToday(plannedTodo) {\r\n    let count = 0;\r\n    this.props.user.lists[0].todos.map(todo => (\r\n      todo._id !== plannedTodo._id && count++\r\n    ));\r\n    if(count === this.props.user.lists[0].todos.length) {\r\n      this.props.copyPlannedTodo(plannedTodo);\r\n    }\r\n  }\r\n\r\n  removeTodoYesterday(plannedTodo) {\r\n    this.props.delete(plannedTodo._id, true);\r\n  }\r\n\r\n  alertTodoYesterday(plannedTodo) {\r\n    this.props.handleAlertedTodo(plannedTodo._id, true);\r\n  }\r\n\r\n  render() {\r\n\r\n    this.props.user.lists[1].todos.map(plannedTodo => (\r\n      plannedTodo.chosenDate === this.currentDate && (this.handleTodoToday(plannedTodo))\r\n    ));\r\n\r\n    this.props.user.lists[0].todos.map(plannedTodo => {\r\n      if(plannedTodo.chosenDate !== undefined) {\r\n        if(plannedTodo.chosenDate === this.yesterdayDate) {\r\n          if(plannedTodo.completed) {\r\n            return this.removeTodoYesterday(plannedTodo);\r\n          } else {\r\n            if(plannedTodo.dateExpired === false) {\r\n              return this.alertTodoYesterday(plannedTodo);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    const todos = this.props.user.lists[this.props.currentList].todos.map(todo => {\r\n      return (\r\n        <CSSTransition key={todo._id} timeout={500} classNames='todo'>\r\n          <Todo\r\n            key={todo._id}\r\n            id={todo._id}\r\n            task={todo.todo}\r\n            completed={todo.completed}\r\n            chosenDate={todo.chosenDate}\r\n            color={this.printColor()}\r\n            language={this.props.user.locale === undefined ? this.props.user.language.slice(0, 2) : this.props.user.locale}\r\n            dateExpired={todo.dateExpired}\r\n            removeTodo={this.handleRemove}\r\n            updateTodo={this.handleUpdate}\r\n            updateDate={this.handleUpdate}\r\n            toggleTodo={this.handleToggleCompletion}\r\n          />\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TodoList-he\" id=\"expand-press\" style={{background: this.printColor()}}>\r\n        {\r\n          this.props.user.lists[this.props.currentList].name === \"Today\" ? \r\n            <div>\r\n            <h1  id=\"expand-press\">היום</h1>\r\n            <h4  id=\"expand-press\">{this.fullDate}</h4>\r\n            </div>\r\n          :\r\n          this.props.user.lists[this.props.currentList].name === \"Planned\" ? \r\n            <h1  id=\"expand-press\">מתוכננות</h1>\r\n          :\r\n          this.props.user.lists[this.props.currentList].name === \"Tasks\" ? \r\n            <h1  id=\"expand-press\">משימות</h1>\r\n          :\r\n          <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\r\n        }\r\n        \r\n        <NewTodoFormHe currentList={this.props.currentList} createTodo={this.handleCreate} />\r\n\r\n        <ul>\r\n          <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoListHe;","import React, { Component } from \"react\";\r\nimport \"./UI.css\";\r\n\r\nclass UI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: 0,\r\n            listName: \"\"\r\n        };\r\n        this.changeCurrentList = this.changeCurrentList.bind(this);\r\n        this.creatNewList = this.creatNewList.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.changeLang = this.changeLang.bind(this);\r\n    }\r\n\r\n    listIcon = [\r\n        new Date().getHours() >= 18 || new Date().getHours() < 6 ? <i className=\"far fa-moon\"/> : <i className=\"fas fa-sun\"/>, \r\n        <i className=\"far fa-calendar-check\"/>, \r\n        <i className=\"fas fa-clipboard-list\"/>, \r\n        <i className=\"fas fa-tasks\"/>\r\n    ]\r\n\r\n    untitledListCount = 0;\r\n\r\n    changeCurrentList(event) {\r\n        if(event.target !== event.currentTarget) {\r\n            return;\r\n        }\r\n        this.props.changeCurrentList(event.currentTarget.id);\r\n    }\r\n\r\n    creatNewList() {\r\n        this.props.addList();\r\n    }\r\n\r\n    toggleForm(event) {\r\n        this.setState({ isEditing: event.currentTarget.id });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n        this.props.updateListName(event.target.id, this.state.listName);\r\n        this.setState({ isEditing: 0, listName: \"\" });\r\n    }\r\n\r\n    handleRemove(event) {\r\n        this.props.removeList(event.currentTarget.id);\r\n    }\r\n\r\n    handleColorChange(event) {\r\n        this.props.changeColor(event.target.id);\r\n    }\r\n\r\n    changeLang(event) {\r\n        this.props.changeLang(event.target.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img\r\n                    className=\"UI-btn UI-btn-out\" \r\n                    src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                    onClick={() => this.props.onExpandClick()} \r\n                    style={{\r\n                        animation: this.props.expand ? \"ui-img-drop 1s forwards\" : this.props.expand !== null && \"ui-img-float 1s forwards\"\r\n                    }}\r\n                    alt=\"user-img\"\r\n                />\r\n                <div className=\"UI\">\r\n                    <img\r\n                        className=\"UI-btn UI-btn-in\" \r\n                        src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                        onClick={() => this.props.onExpandClick()}\r\n                        alt=\"user-img\"\r\n                    />\r\n                    <div className=\"user-name\">\r\n                        <h4>Hi, {this.props.user.fullName}</h4>\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-secondary dropdown btn-dropdown\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-sliders-h\"></i>\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <div className=\"dropdown-item color-pick\">\r\n                                    <p>Pick a Color:</p>\r\n                                    <button className=\"color-btn red\" id=\"red\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn blue\" id=\"blue\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn green\" id=\"green\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn black\" id=\"black\" onClick={this.handleColorChange}></button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <div className=\"dropdown-item lang-pick\">\r\n                                    <p>Language:</p>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"en\" onClick={this.changeLang}>English</button>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"he\" onClick={this.changeLang}>עברית</button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a className=\"dropdown-item\" href=\"/logout\">Log Out</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     {this.props.user.lists.map((list, index) => {\r\n                        let result;\r\n                        if(index < 3){\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj list-name\"\r\n                                onClick={this.changeCurrentList}\r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[index]}\r\n                                        {\" \" + list.name}\r\n                                    </h3>\r\n                                </div>\r\n                            )\r\n                        } else if(this.state.isEditing === index.toString()) {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <form id={index} className='List-edit-form' onSubmit={this.handleUpdate}>\r\n                                        <input\r\n                                        type='text'\r\n                                        value={this.state.listName}\r\n                                        name='listName'\r\n                                        onChange={this.handleChange}\r\n                                        maxLength=\"9\"\r\n                                        />\r\n                                        <button><i className=\"fas fa-check\"></i></button>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index} \r\n                                className=\"UI-obj list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[3]}\r\n                                        {\" \" + list.name}\r\n                                    </h3>\r\n                                    <div className='List-buttons'>\r\n                                        <button id={index} onClick={this.toggleForm}>\r\n                                            <i className='fas fa-pen' />\r\n                                        </button>\r\n                                        <button id={index} onClick={this.handleRemove}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (result)\r\n                    })}\r\n                    <hr/>\r\n                    <div \r\n                    className=\"UI-obj list-name\" \r\n                    onClick={this.creatNewList} \r\n                    >\r\n                        <h3><i className=\"far fa-plus-square\"></i> New List</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UI;","import React, { Component } from \"react\";\r\nimport \"./UI.css\";\r\nimport \"./UIHe.css\";\r\n\r\nclass UIHe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: 0,\r\n            listName: \"\"\r\n        };\r\n        this.changeCurrentList = this.changeCurrentList.bind(this);\r\n        this.creatNewList = this.creatNewList.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.changeLang = this.changeLang.bind(this);\r\n    }\r\n\r\n    listIcon = [\r\n        new Date().getHours() >= 18 || new Date().getHours() < 6 ? <i className=\"far fa-moon\"/> : <i className=\"fas fa-sun\"/>, \r\n        <i className=\"far fa-calendar-check\"/>, \r\n        <i className=\"fas fa-clipboard-list\"/>, \r\n        <i className=\"fas fa-tasks\"/>\r\n    ]\r\n\r\n    untitledListCount = 0;\r\n\r\n    changeCurrentList(event) {\r\n        if(event.target !== event.currentTarget) {\r\n            return;\r\n        }\r\n        this.props.changeCurrentList(event.currentTarget.id);\r\n    }\r\n\r\n    creatNewList() {\r\n        this.props.addList();\r\n    }\r\n\r\n    toggleForm(event) {\r\n        this.setState({ isEditing: event.currentTarget.id });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n        this.props.updateListName(event.target.id, this.state.listName);\r\n        this.setState({ isEditing: 0, listName: \"\" });\r\n    }\r\n\r\n    handleRemove(event) {\r\n        this.props.removeList(event.currentTarget.id);\r\n    }\r\n\r\n    handleColorChange(event) {\r\n        this.props.changeColor(event.target.id);\r\n    }\r\n\r\n    changeLang(event) {\r\n        this.props.changeLang(event.target.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img\r\n                    className=\"UI-btn UI-btn-out-he\" \r\n                    src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                    onClick={() => this.props.onExpandClick()} \r\n                    style={{\r\n                        animation: this.props.expand ? \"ui-img-drop 2s forwards\" : this.props.expand !== null && \"ui-img-float 1s forwards\"\r\n                    }}\r\n                    alt=\"user-img\"\r\n                />\r\n                <div className=\"UI-he\">\r\n                    <img\r\n                        className=\"UI-btn UI-btn-in-he\" \r\n                        src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                        onClick={() => this.props.onExpandClick()}\r\n                        alt=\"user-img\"\r\n                    />\r\n                    <div className=\"user-name-he\">\r\n                        <h4>היי, {this.props.user.fullName}</h4>\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-secondary dropdown btn-dropdown-he\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-sliders-h\"></i>\r\n                            </button>\r\n                            <div className=\"dropdown-menu dropdown-menu-he\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <div className=\"dropdown-item dropdown-item-he color-pick\">\r\n                                    <p>בחר צבע:</p>\r\n                                    <button className=\"color-btn red\" id=\"red\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn blue\" id=\"blue\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn green\" id=\"green\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn black\" id=\"black\" onClick={this.handleColorChange}></button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <div className=\"dropdown-item dropdown-item-he lang-pick\">\r\n                                    <p>שפות:</p>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"en\" onClick={this.changeLang}>English</button>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"he\" onClick={this.changeLang}>עברית</button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a className=\"dropdown-item dropdown-item-he\" href=\"/logout\">התנתק/י</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     {this.props.user.lists.map((list, index) => {\r\n                        let result;\r\n                        if(index < 3){\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj-he list-name\"\r\n                                onClick={this.changeCurrentList}\r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[index]} {list.name === \"Today\" ? \"היום \" : list.name === \"Planned\" ? \"מתוכננות \" : \"משימות \"}\r\n                                    </h3>\r\n                                </div>\r\n                            )\r\n                        } else if(this.state.isEditing === index.toString()) {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj-he list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <form id={index} className=\"List-edit-form-he\" onSubmit={this.handleUpdate}>\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        value={this.state.listName}\r\n                                        name=\"listName\"\r\n                                        onChange={this.handleChange}\r\n                                        maxLength=\"9\"\r\n                                        />\r\n                                        <button><i className=\"fas fa-check\"></i></button>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index} \r\n                                className=\"UI-obj-he list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[3]} {list.name}\r\n                                    </h3>\r\n                                    <div className=\"List-buttons-he\">\r\n                                        <button id={index} onClick={this.toggleForm}>\r\n                                            <i className=\"fas fa-pen\" />\r\n                                        </button>\r\n                                        <button id={index} onClick={this.handleRemove}>\r\n                                            <i className=\"fas fa-trash\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (result)\r\n                    })}\r\n                    <hr/>\r\n                    <div \r\n                    className=\"UI-obj-he list-name\" \r\n                    onClick={this.creatNewList} \r\n                    >\r\n                        <h3><i className=\"far fa-plus-square\"></i> רשימה חדשה</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIHe;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TodoList from \"./TodoList\";\nimport TodoListHe from \"./TodoListHe\";\nimport UI from \"./UI\";\nimport UIHe from \"./UIHe\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: null,\n      boolean: false,\n      user: null,\n      currentList: 0\n    };\n    this.getUserFromDb = this.getUserFromDb.bind(this);\n    this.create = this.create.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n    this.remove = this.remove.bind(this);\n    this.handleExpandClick = this.handleExpandClick.bind(this);\n    this.handleChangeCurrentList = this.handleChangeCurrentList.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleRemoveList = this.handleRemoveList.bind(this);\n    this.handleListNameUpdate = this.handleListNameUpdate.bind(this);\n    this.copyPlannedTodo = this.copyPlannedTodo.bind(this);\n    this.handleChangeColor = this.handleChangeColor.bind(this);\n    this.handleAlertedTodo = this.handleAlertedTodo.bind(this);\n    this.handleChangeLang = this.handleChangeLang.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserFromDb();\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  getUserFromDb = () => {\n    //let getUrl = \"daymaker/\" + document.getElementById('userId').innerHTML;\n    let getUrl = window.location.href.slice(0, 20) + \"1/daymaker/5e4c290492d81d7474b1af01\";\n    \n    \n    fetch(getUrl)\n    .then((response) => response.json())\n    .then((res) => this.setState({ user: res.userData }));\n    \n  };\n\n  create(newTodo) {\n    let getURL = \"daymaker/putData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      todo: newTodo,\n      currentList: this.state.currentList\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  update(id, updatedTask, isDate) {\n    if(isDate) {\n      let objIdsToUpdate = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n      let [objIdToUpdate] = objIdsToUpdate;\n      let idToUpdate = objIdToUpdate._id;\n\n      let getURL = \"daymaker/updateDate\";\n      axios.post(getURL, {\n        userId: this.state.user._id,\n        id: idToUpdate,\n        currentList: this.state.currentList,\n        update: updatedTask\n      }).then(res => {res !== undefined && this.getUserFromDb()});\n    } else {\n      let objIdsToUpdate = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n      let [objIdToUpdate] = objIdsToUpdate;\n      let idToUpdate = objIdToUpdate._id;\n\n      let getURL = \"daymaker/updateData\";\n      axios.post(getURL, {\n        userId: this.state.user._id,\n        id: idToUpdate,\n        currentList: this.state.currentList,\n        update: updatedTask\n      }).then(res => {res !== undefined && this.getUserFromDb()});\n    }\n    \n  }\n\n  toggleCompletion(id) {\n    let objIdsToUpdate = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n    let [objIdToUpdate] = objIdsToUpdate;\n    let idToUpdate = objIdToUpdate._id;\n\n    let getURL = \"daymaker/updateData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      id: idToUpdate,\n      currentList: this.state.currentList,\n      update: \"\"\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  remove(id, isPlannedDelete) {\n\n    if(isPlannedDelete) {\n      let getURL = \"daymaker/deleteTodo\";\n      axios.delete(getURL, {\n        data: {\n          userId: this.state.user._id,\n          id: id\n        }\n      }).then(res => {res !== undefined && this.getUserFromDb()});\n    } else {\n      let objIdsToDelete = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n      let [objIdToDelete] = objIdsToDelete;\n      let idToDelete = objIdToDelete._id;\n\n      let getURL = \"daymaker/deleteTodo\";\n      axios.delete(getURL, {\n        data: {\n          userId: this.state.user._id,\n          id: idToDelete,\n          currentList: this.state.currentList\n        }\n      }).then(res => {res !== undefined && this.getUserFromDb()});\n    }\n  }\n\n  handleExpandClick(event) {\n    if(event === undefined) {\n      if(this.state.expand === null) {\n        this.setState({expand: true});\n      } else {\n        this.setState({expand: !this.state.expand});\n      }\n    }\n\n    if(this.state.expand === true && event !== undefined) {\n      if(event.target.id === \"expand-press\") {\n        this.setState({expand: false});\n      }\n    }\n  }\n\n  handleChangeCurrentList(newCurrentList) {\n    this.setState({currentList: newCurrentList, expand: false});\n  }\n  \n  handleAddList() {\n    let getURL = \"daymaker/addList\";\n    axios.post(getURL, {\n      userId: this.state.user._id\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  handleListNameUpdate(listId, newListName) {\n    let getURL = \"daymaker/updateListName\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      listId: listId,\n      update: newListName\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  handleRemoveList(listId) {\n    let getURL = \"daymaker/deleteList\";\n    axios.delete(getURL, {\n      data: {\n        userId: this.state.user._id,\n        listId: listId\n      }\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n\n    if(listId < this.state.currentList && this.state.user.lists.length !== 4) {\n      this.setState({currentList: (this.state.currentList - 1)});\n    } else {\n      this.setState({currentList: 0});\n    }\n\n    if(listId === this.state.currentList) {\n      this.setState({currentList: 0});\n    }\n  }\n\n  copyPlannedTodo(plannedTodo) {\n    let getURL = \"daymaker/copyData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      todo: plannedTodo,\n      currentList: 0\n    });\n\n    getURL = \"daymaker/deleteTodo\";\n    axios.delete(getURL, {\n      data: {\n        userId: this.state.user._id,\n        id: plannedTodo._id,\n        currentList: \"1\"\n      }\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  handleChangeColor(colorId) {\n    let getURL = \"daymaker/updateColor\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      colorId: colorId\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  handleAlertedTodo(plannedTodo) {\n    let getURL = \"daymaker/updateData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      id: plannedTodo,\n      update: \"\"\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  handleChangeLang(language) {\n    let getURL = \"daymaker/changeLang\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      language: language\n    }).then(res => {res !== undefined && this.getUserFromDb()});\n  }\n\n  render() {\n    if(this.state.user !== null){\n      if((this.state.user.locale === undefined && this.state.user.language.slice(0, 2) === \"en\") || this.state.user.locale === \"en\") {\n        return (\n          <div className=\"main-div\" id=\"expand-press\" onClick={this.handleExpandClick} style={{\n              animation: this.state.expand ? \"slide-right 1s both\" : this.state.expand !== null && \"slide-left 1s both\"\n            }} >\n            <TodoList \n              user={this.state.user} \n              currentList={this.state.currentList}\n              create={this.create}\n              update={this.update}\n              toggleCompletion={this.toggleCompletion}\n              delete={this.remove}\n              doPlannedTodo={this.copyPlannedTodo}\n              handleAlertedTodo={this.handleAlertedTodo}\n            />\n            <UI \n              onExpandClick={this.handleExpandClick} \n              expand={this.state.expand}\n              user={this.state.user}\n              changeCurrentList={this.handleChangeCurrentList}\n              addList={this.handleAddList}\n              updateListName={this.handleListNameUpdate}\n              removeList={this.handleRemoveList}\n              changeColor={this.handleChangeColor}\n              changeLang={this.handleChangeLang}\n            />\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"main-div\" id=\"expand-press\" onClick={this.handleExpandClick} style={{\n              animation: this.state.expand ? \"slide-left-he 1s both\" : this.state.expand !== null && \"slide-right-he 1s both\",\n              direction: \"rtl\"\n            }} >\n            <TodoListHe\n              user={this.state.user} \n              currentList={this.state.currentList}\n              create={this.create}\n              update={this.update}\n              toggleCompletion={this.toggleCompletion}\n              delete={this.remove}\n              doPlannedTodo={this.copyPlannedTodo}\n              handleAlertedTodo={this.handleAlertedTodo}\n            />\n            <UIHe\n              onExpandClick={this.handleExpandClick} \n              expand={this.state.expand}\n              user={this.state.user}\n              changeCurrentList={this.handleChangeCurrentList}\n              addList={this.handleAddList}\n              updateListName={this.handleListNameUpdate}\n              removeList={this.handleRemoveList}\n              changeColor={this.handleChangeColor}\n              changeLang={this.handleChangeLang}\n            />\n          </div>\n        );\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet userId = document.getElementById(\"userId\").innerHTML;\n\nReactDOM.render(<App userId={userId} />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}