{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","NewTodoFormHe.js","TodoListHe.js","UI.js","UIHe.js","App.js","serviceWorker.js","index.js"],"names":["NewTodoForm","props","state","task","chosenDate","Date","handleChange","bind","handleSubmit","handleChangeDate","evt","this","setState","target","name","value","preventDefault","currentList","createTodo","id","uuid","completed","date","className","onSubmit","htmlFor","type","placeholder","onChange","selected","minDate","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","customInput","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","updateTodo","toggleTodo","result","CSSTransition","key","timeout","classNames","style","background","color","marginRight","language","onClick","undefined","dateExpired","TransitionGroup","TodoList","getDate","fullDate","printDayAndMonth","dateString","toISOString","year","toString","slice","month","day","yesterday","currentDate","yesterdayDate","handleCreate","handleToggleCompletion","handleTodoToday","removeTodoYesterday","printColor","alertTodoYesterday","getMonth","getDay","user","newTodo","create","updatedTask","update","toggleCompletion","isPlannedDelete","delete","plannedTodo","count","lists","todos","map","todo","_id","length","copyPlannedTodo","handleAlertedTodo","NewTodoFormHe","TodoListHe","UI","listIcon","getHours","untitledListCount","listName","changeCurrentList","creatNewList","handleColorChange","changeLang","event","currentTarget","addList","updateListName","removeList","changeColor","src","image","onExpandClick","animation","expand","alt","fullName","class","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","list","index","maxLength","UIHe","App","getUserFromDb","getUrl","document","getElementById","innerHTML","axios","get","then","res","data","intervalIsSet","remove","handleExpandClick","handleChangeCurrentList","handleAddList","handleRemoveList","handleListNameUpdate","handleChangeColor","handleChangeLang","interval","setInterval","clearInterval","post","userId","objIdsToUpdate","filter","t","idToUpdate","objIdsToDelete","idToDelete","newCurrentList","listId","newListName","colorId","setPageDir","Boolean","window","location","hostname","match","ReactDOM","render","setAttribute","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12c3c783.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport uuid from \"uuid/v4\";\nimport DatePicker from \"react-datepicker\";\nimport \"./NewTodoForm.css\";\n\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      task: \"\",\n      chosenDate: new Date()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    if(this.props.currentList === \"1\") {\n      this.props.createTodo({ task: this.state.task, chosenDate: this.state.chosenDate, id: uuid(), completed: false });\n    } else {\n      this.props.createTodo({ task: this.state.task, id: uuid(), completed: false });\n    }\n    this.setState({ task: \"\" });\n  }\n\n  handleChangeDate(date) {\n    this.setState({\n      chosenDate: date\n    });\n  }\n\n  render() {\n    if(this.props.currentList === \"1\") {\n      return (\n        <form className=\"NewTodoForm\" id=\"expand-press\" onSubmit={this.handleSubmit}>\n          <label id=\"expand-press\" htmlFor=\"task\">New Todo</label>\n          <input\n            type=\"text\"\n            placeholder=\"New Todo\"\n            id=\"task\"\n            name=\"task\"\n            value={this.state.task}\n            onChange={this.handleChange}\n          />\n          <DatePicker \n            selected={this.state.chosenDate}\n            onChange={this.handleChangeDate}\n            minDate={new Date()}\n            showYearDropdown\n            yearDropdownItemNumber={15}\n            scrollableYearDropdown\n            customInput={<button id=\"expand-press\" type=\"button\" className=\"btn-calendar-open\"><i className=\"far fa-calendar-alt\"></i></button>}\n          />\n          <button id=\"expand-press\" className=\"add-todo\">Add Todo</button>\n        </form>\n      );\n    } else {\n      return (\n        <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"task\">New Todo</label>\n          <input\n            type=\"text\"\n            placeholder=\"New Todo\"\n            id=\"task\"\n            name=\"task\"\n            value={this.state.task}\n            onChange={this.handleChange}\n          />\n          <button id=\"expand-press\" className=\"add-todo\">Add Todo</button>\n        </form>\n      );\n    }\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id, false);\n  }\n\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  handleUpdate(evt) {\n    evt.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <CSSTransition key=\"editing\" timeout={500} classNames=\"form\">\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              name=\"task\"\n              onChange={this.handleChange}\n            />\n            <button style={{background: this.props.color, marginRight: this.props.language === \"en\" ? \"\" : \"5px\"}}>{this.props.language === \"en\" ? \"save\" : \"שמור שינויים\"}</button>\n          </form>\n        </CSSTransition>\n      );\n    } else {\n      result = (\n        <CSSTransition key=\"normal\" timeout={500} classNames=\"task-text\">\n          <li className={this.props.language === \"en\" ? \"Todo-task\" : \"Todo-task-he\"}  id=\"expand-press\" onClick={this.handleToggle}>\n            {this.props.task}\n            <h6 style={{color: (this.props.dateExpired !== undefined && this.props.dateExpired) ? \"red\" : \"white\"}}>{ this.props.chosenDate && this.props.chosenDate }</h6>\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <TransitionGroup\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}  id=\"expand-press\"\n      >\n        {result}\n        <div className={this.props.language === \"en\" ? \"Todo-buttons\" : \"Todo-buttons-he\"}>\n          <button onClick={this.toggleForm}>\n            <i className=\"fas fa-pen\" />\n          </button>\n          <button onClick={this.handleRemove}>\n            <i className=\"fas fa-trash\" />\n          </button>\n        </div>\n      </TransitionGroup>\n    );\n  }\n}\nexport default Todo;\n","import React, { Component } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\nimport \"./TodoListHe.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.printDayAndMonth = this.printDayAndMonth.bind(this);\n    this.handleTodoToday = this.handleTodoToday.bind(this);\n    this.removeTodoYesterday = this.removeTodoYesterday.bind(this);\n    this.printColor = this.printColor.bind(this);\n    this.alertTodoYesterday = this.alertTodoYesterday.bind(this);\n  }\n\n  date = new Date().getDate();\n  day;\n  month;\n  fullDate = this.printDayAndMonth() + this.date;\n\n  dateString = new Date().toISOString();\n  year = this.dateString.toString().slice(0, 4);\n  month = this.dateString.toString().slice(5, 7);\n  day = this.dateString.toString().slice(8, 10);\n  yesterday = this.day - 1;\n  currentDate = this.day + \"/\" + this.month + \"/\" + this.year;\n  yesterdayDate = this.yesterday + \"/\" + this.month + \"/\" + this.year;\n\n  printDayAndMonth() {\n    \n    switch (new Date().getMonth()) {\n      case 0:\n        this.month = \"January\";\n        break;\n      case 1:\n        this.month = \"February\";\n        break;\n      case 2:\n        this.month = \"March\";\n        break;\n      case 3:\n        this.month = \"April\";\n        break;\n      case 4:\n        this.month = \"May\";\n        break;\n      case 5:\n        this.month = \"June\";\n        break;\n      case 6:\n        this.month = \"July\";\n        break;\n      case 7:\n        this.month = \"August\";\n        break;\n      case 8:\n        this.month = \"September\";\n        break;\n      case 9:\n        this.month = \"October\";\n        break;\n      case 10:\n        this.month = \"November\";\n        break;\n      default:\n        this.month = \"December\";\n    }\n\n    switch (new Date().getDay()) {\n      case 0:\n        this.day = \"Sunday\";\n        break;\n      case 1:\n        this.day = \"Monday\";\n        break;\n      case 2:\n        this.day = \"Tuesday\";\n        break;\n      case 3:\n        this.day = \"Wednesday\";\n        break;\n      case 4:\n        this.day = \"Thursday\";\n        break;\n      case 5:\n        this.day = \"Friday\";\n        break;\n      default:\n        this.day = \"Saturday\";\n    }\n    return (this.day + \", \" + this.month + \" \");\n  }\n\n  color = \"\";\n\n  printColor() {\n    switch(this.props.user.color) {\n      case \"blue\":\n        this.color = \"#38b2f8\";\n        break;\n      case \"green\":\n        this.color = \"#42e6a4\";\n        break;\n      case \"black\":\n        this.color = \"black\";\n        break;\n      default:\n        this.color = \"#FF6666\";\n    }\n    return this.color;\n  }\n\n  handleCreate(newTodo) {\n    this.props.create(newTodo);\n  }\n\n  handleUpdate(id, updatedTask) {\n    this.props.update(id, updatedTask);\n  }\n\n  handleToggleCompletion(id) {\n    this.props.toggleCompletion(id);\n  }\n\n  handleRemove(id, isPlannedDelete) {\n    this.props.delete(id, isPlannedDelete);\n  }\n\n  handleTodoToday(plannedTodo) {\n    let count = 0;\n    this.props.user.lists[0].todos.map(todo => (\n      todo._id !== plannedTodo._id && count++\n    ));\n    if(count === this.props.user.lists[0].todos.length) {\n      this.props.copyPlannedTodo(plannedTodo);\n    }\n  }\n\n  removeTodoYesterday(plannedTodo) {\n    this.props.delete(plannedTodo._id, true);\n  }\n\n  alertTodoYesterday(plannedTodo) {\n    this.props.handleAlertedTodo(plannedTodo._id, true);\n  }\n\n  render() {\n\n    this.props.user.lists[1].todos.map(plannedTodo => (\n      plannedTodo.chosenDate === this.currentDate && (this.handleTodoToday(plannedTodo))\n    ));\n\n    this.props.user.lists[1].todos.map(plannedTodo => (\n      plannedTodo.chosenDate === this.yesterdayDate && \n      plannedTodo.completed \n      ?\n      this.removeTodoYesterday(plannedTodo)\n      :\n      !plannedTodo.dateExpired && (this.alertTodoYesterday(plannedTodo))\n    ));\n\n    const todos = this.props.user.lists[this.props.currentList].todos.map(todo => {\n      return (\n        <CSSTransition key={todo._id} timeout={500} classNames='todo'>\n          <Todo\n            key={todo._id}\n            id={todo._id}\n            task={todo.todo}\n            completed={todo.completed}\n            chosenDate={todo.chosenDate}\n            color={this.printColor()}\n            language={this.props.user.language.slice(0, 2)}\n            dateExpired={todo.dateExpired}\n            removeTodo={this.handleRemove}\n            updateTodo={this.handleUpdate}\n            toggleTodo={this.handleToggleCompletion}\n          />\n        </CSSTransition>\n      );\n    });\n    return (\n      <div className=\"TodoList\" id=\"expand-press\" style={{background: this.printColor()}}>\n        {\n          this.props.user.lists[this.props.currentList].name === \"Today\" ? \n            <div>\n            <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\n            <h4  id=\"expand-press\">{this.fullDate}</h4>\n            </div>\n          :\n            <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\n        }\n        \n        <NewTodoForm currentList={this.props.currentList} createTodo={this.handleCreate} />\n\n        <ul>\n          <TransitionGroup className=\"todo-list\">{todos}</TransitionGroup>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./NewTodoFormHe.css\";\r\n\r\nclass NewTodoFormHe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      task: \"\",\r\n      chosenDate: new Date()\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangeDate = this.handleChangeDate.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if(this.props.currentList === \"1\") {\r\n      this.props.createTodo({ task: this.state.task, chosenDate: this.state.chosenDate, id: uuid(), completed: false });\r\n    } else {\r\n      this.props.createTodo({ task: this.state.task, id: uuid(), completed: false });\r\n    }\r\n    this.setState({ task: \"\" });\r\n  }\r\n\r\n  handleChangeDate(date) {\r\n    this.setState({\r\n      chosenDate: date\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.props.currentList === \"1\") {\r\n      return (\r\n        <form className=\"NewTodoForm-he\" id=\"expand-press\" onSubmit={this.handleSubmit}>\r\n          <label id=\"expand-press\" htmlFor=\"task\">משימה חדשה</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"משימה חדשה\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n          <DatePicker \r\n            selected={this.state.chosenDate}\r\n            onChange={this.handleChangeDate}\r\n            minDate={new Date()}\r\n            showYearDropdown\r\n            yearDropdownItemNumber={15}\r\n            scrollableYearDropdown\r\n            customInput={<button id=\"expand-press\" type=\"button\" className=\"btn-calendar-open\"><i className=\"far fa-calendar-alt\"></i></button>}\r\n          />\r\n          <button id=\"expand-press\" className=\"add-todo\">הוסף משימה</button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <form className=\"NewTodoForm-he\" onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"task\">משימה חדשה</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"משימה חדשה\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button id=\"expand-press\" className=\"add-todo\">הוסף משימה</button>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default NewTodoFormHe;\r\n","import React, { Component } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport NewTodoFormHe from \"./NewTodoFormHe\";\r\nimport Todo from \"./Todo\";\r\nimport \"./TodoList.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TodoListHe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCreate = this.handleCreate.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.printDayAndMonth = this.printDayAndMonth.bind(this);\r\n    this.handleTodoToday = this.handleTodoToday.bind(this);\r\n    this.removeTodoYesterday = this.removeTodoYesterday.bind(this);\r\n    this.printColor = this.printColor.bind(this);\r\n    this.alertTodoYesterday = this.alertTodoYesterday.bind(this);\r\n  }\r\n\r\n  date = new Date().getDate();\r\n  day;\r\n  month;\r\n  fullDate = this.printDayAndMonth() + this.date;\r\n\r\n  dateString = new Date().toISOString();\r\n  year = this.dateString.toString().slice(0, 4);\r\n  month = this.dateString.toString().slice(5, 7);\r\n  day = this.dateString.toString().slice(8, 10);\r\n  yesterday = this.day - 1;\r\n  currentDate = this.day + \"/\" + this.month + \"/\" + this.year;\r\n  yesterdayDate = this.yesterday + \"/\" + this.month + \"/\" + this.year;\r\n\r\n  printDayAndMonth() {\r\n    \r\n    switch (new Date().getMonth()) {\r\n      case 0:\r\n        this.month = \"ינואר\";\r\n        break;\r\n      case 1:\r\n        this.month = \"פברואר\";\r\n        break;\r\n      case 2:\r\n        this.month = \"מרץ\";\r\n        break;\r\n      case 3:\r\n        this.month = \"אפריל\";\r\n        break;\r\n      case 4:\r\n        this.month = \"מאי\";\r\n        break;\r\n      case 5:\r\n        this.month = \"יוני\";\r\n        break;\r\n      case 6:\r\n        this.month = \"יולי\";\r\n        break;\r\n      case 7:\r\n        this.month = \"אוגוסט\";\r\n        break;\r\n      case 8:\r\n        this.month = \"ספטמבר\";\r\n        break;\r\n      case 9:\r\n        this.month = \"אוקטובר\";\r\n        break;\r\n      case 10:\r\n        this.month = \"נובמבר\";\r\n        break;\r\n      default:\r\n        this.month = \"דמצמבר\";\r\n    }\r\n\r\n    switch (new Date().getDay()) {\r\n      case 0:\r\n        this.day = \"ראשון\";\r\n        break;\r\n      case 1:\r\n        this.day = \"שני\";\r\n        break;\r\n      case 2:\r\n        this.day = \"שלישי\";\r\n        break;\r\n      case 3:\r\n        this.day = \"רביעי\";\r\n        break;\r\n      case 4:\r\n        this.day = \"חמישי\";\r\n        break;\r\n      case 5:\r\n        this.day = \"שישי\";\r\n        break;\r\n      default:\r\n        this.day = \"שבת\";\r\n    }\r\n    return (this.day + \", \" + this.month + \" \");\r\n  }\r\n\r\n  color = \"\";\r\n\r\n  printColor() {\r\n    switch(this.props.user.color) {\r\n      case \"blue\":\r\n        this.color = \"#38b2f8\";\r\n        break;\r\n      case \"green\":\r\n        this.color = \"#42e6a4\";\r\n        break;\r\n      case \"black\":\r\n        this.color = \"black\";\r\n        break;\r\n      default:\r\n        this.color = \"#FF6666\";\r\n    }\r\n    return this.color;\r\n  }\r\n\r\n  handleCreate(newTodo) {\r\n    this.props.create(newTodo);\r\n  }\r\n\r\n  handleUpdate(id, updatedTask) {\r\n    this.props.update(id, updatedTask);\r\n  }\r\n\r\n  handleToggleCompletion(id) {\r\n    this.props.toggleCompletion(id);\r\n  }\r\n\r\n  handleRemove(id, isPlannedDelete) {\r\n    this.props.delete(id, isPlannedDelete);\r\n  }\r\n\r\n  handleTodoToday(plannedTodo) {\r\n    let count = 0;\r\n    this.props.user.lists[0].todos.map(todo => (\r\n      todo._id !== plannedTodo._id && count++\r\n    ));\r\n    if(count === this.props.user.lists[0].todos.length) {\r\n      this.props.copyPlannedTodo(plannedTodo);\r\n    }\r\n  }\r\n\r\n  removeTodoYesterday(plannedTodo) {\r\n    this.props.delete(plannedTodo._id, true);\r\n  }\r\n\r\n  alertTodoYesterday(plannedTodo) {\r\n    this.props.handleAlertedTodo(plannedTodo._id, true);\r\n  }\r\n\r\n  render() {\r\n\r\n    this.props.user.lists[1].todos.map(plannedTodo => (\r\n      plannedTodo.chosenDate === this.currentDate && (this.handleTodoToday(plannedTodo))\r\n    ));\r\n\r\n    this.props.user.lists[1].todos.map(plannedTodo => (\r\n      plannedTodo.chosenDate === this.yesterdayDate && \r\n      plannedTodo.completed \r\n      ?\r\n      this.removeTodoYesterday(plannedTodo)\r\n      :\r\n      !plannedTodo.dateExpired && (this.alertTodoYesterday(plannedTodo))\r\n    ));\r\n\r\n    const todos = this.props.user.lists[this.props.currentList].todos.map(todo => {\r\n      return (\r\n        <CSSTransition key={todo._id} timeout={500} classNames='todo'>\r\n          <Todo\r\n            key={todo._id}\r\n            id={todo._id}\r\n            task={todo.todo}\r\n            completed={todo.completed}\r\n            chosenDate={todo.chosenDate}\r\n            color={this.printColor()}\r\n            language={this.props.user.language}\r\n            dateExpired={todo.dateExpired}\r\n            removeTodo={this.handleRemove}\r\n            updateTodo={this.handleUpdate}\r\n            toggleTodo={this.handleToggleCompletion}\r\n          />\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TodoList-he\" id=\"expand-press\" style={{background: this.printColor()}}>\r\n        {\r\n          this.props.user.lists[this.props.currentList].name === \"Today\" ? \r\n            <div>\r\n            <h1  id=\"expand-press\">היום</h1>\r\n            <h4  id=\"expand-press\">{this.fullDate}</h4>\r\n            </div>\r\n          :\r\n          this.props.user.lists[this.props.currentList].name === \"Planned\" ? \r\n            <h1  id=\"expand-press\">מתוכננות</h1>\r\n          :\r\n          this.props.user.lists[this.props.currentList].name === \"Tasks\" ? \r\n            <h1  id=\"expand-press\">משימות</h1>\r\n          :\r\n          <h1  id=\"expand-press\">{this.props.user.lists[this.props.currentList].name}</h1>\r\n        }\r\n        \r\n        <NewTodoFormHe currentList={this.props.currentList} createTodo={this.handleCreate} />\r\n\r\n        <ul>\r\n          <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoListHe;","import React, { Component } from \"react\";\r\nimport \"./UI.css\";\r\n\r\nclass UI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: 0,\r\n            listName: \"\"\r\n        };\r\n        this.changeCurrentList = this.changeCurrentList.bind(this);\r\n        this.creatNewList = this.creatNewList.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.changeLang = this.changeLang.bind(this);\r\n    }\r\n\r\n    listIcon = [\r\n        new Date().getHours() >= 18 || new Date().getHours() < 6 ? <i className=\"far fa-moon\"/> : <i className=\"fas fa-sun\"/>, \r\n        <i className=\"far fa-calendar-check\"/>, \r\n        <i className=\"fas fa-clipboard-list\"/>, \r\n        <i className=\"fas fa-tasks\"/>\r\n    ]\r\n\r\n    untitledListCount = 0;\r\n\r\n    changeCurrentList(event) {\r\n        if(event.target !== event.currentTarget) {\r\n            return;\r\n        }\r\n        this.props.changeCurrentList(event.currentTarget.id);\r\n    }\r\n\r\n    creatNewList() {\r\n        this.props.addList();\r\n    }\r\n\r\n    toggleForm(event) {\r\n        this.setState({ isEditing: event.currentTarget.id });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n        this.props.updateListName(event.target.id, this.state.listName);\r\n        this.setState({ isEditing: 0, listName: \"\" });\r\n    }\r\n\r\n    handleRemove(event) {\r\n        this.props.removeList(event.currentTarget.id);\r\n    }\r\n\r\n    handleColorChange(event) {\r\n        this.props.changeColor(event.target.id);\r\n    }\r\n\r\n    changeLang(event) {\r\n        this.props.changeLang(event.target.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img\r\n                    className=\"UI-btn UI-btn-out\" \r\n                    src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                    onClick={() => this.props.onExpandClick()} \r\n                    style={{\r\n                        animation: this.props.expand ? \"ui-img-drop 1s forwards\" : this.props.expand !== null && \"ui-img-float 1s forwards\"\r\n                    }}\r\n                    alt=\"user-img\"\r\n                />\r\n                <div className=\"UI\">\r\n                    <img\r\n                        className=\"UI-btn UI-btn-in\" \r\n                        src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                        onClick={() => this.props.onExpandClick()}\r\n                        alt=\"user-img\"\r\n                    />\r\n                    <div className=\"user-name\">\r\n                        <h4>Hi, {this.props.user.fullName}</h4>\r\n                        <div class=\"dropdown\">\r\n                            <button class=\"btn btn-secondary dropdown btn-dropdown\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i class=\"fas fa-sliders-h\"></i>\r\n                            </button>\r\n                            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <div class=\"dropdown-item color-pick\">\r\n                                    <p>Pick a Color:</p>\r\n                                    <button class=\"color-btn red\" id=\"red\" onClick={this.handleColorChange}></button>\r\n                                    <button class=\"color-btn blue\" id=\"blue\" onClick={this.handleColorChange}></button>\r\n                                    <button class=\"color-btn green\" id=\"green\" onClick={this.handleColorChange}></button>\r\n                                    <button class=\"color-btn black\" id=\"black\" onClick={this.handleColorChange}></button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <div className=\"dropdown-item lang-pick\">\r\n                                    <p>Language:</p>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"en\" onClick={this.changeLang}>English</button>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"he\" onClick={this.changeLang}>עברית</button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a class=\"dropdown-item\" href=\"/logout\">Log Out</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     {this.props.user.lists.map((list, index) => {\r\n                        let result;\r\n                        if(index < 3){\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj list-name\"\r\n                                onClick={this.changeCurrentList}\r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[index]}\r\n                                        {\" \" + list.name}\r\n                                    </h3>\r\n                                </div>\r\n                            )\r\n                        } else if(this.state.isEditing === index.toString()) {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <form id={index} className='List-edit-form' onSubmit={this.handleUpdate}>\r\n                                        <input\r\n                                        type='text'\r\n                                        value={this.state.listName}\r\n                                        name='listName'\r\n                                        onChange={this.handleChange}\r\n                                        maxLength=\"9\"\r\n                                        />\r\n                                        <button><i className=\"fas fa-check\"></i></button>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index} \r\n                                className=\"UI-obj list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[3]}\r\n                                        {\" \" + list.name}\r\n                                    </h3>\r\n                                    <div className='List-buttons'>\r\n                                        <button id={index} onClick={this.toggleForm}>\r\n                                            <i className='fas fa-pen' />\r\n                                        </button>\r\n                                        <button id={index} onClick={this.handleRemove}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (result)\r\n                    })}\r\n                    <hr/>\r\n                    <div \r\n                    className=\"UI-obj list-name\" \r\n                    onClick={this.creatNewList} \r\n                    >\r\n                        <h3><i className=\"far fa-plus-square\"></i> New List</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UI;","import React, { Component } from \"react\";\r\nimport \"./UI.css\";\r\nimport \"./UIHe.css\";\r\n\r\nclass UIHe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: 0,\r\n            listName: \"\"\r\n        };\r\n        this.changeCurrentList = this.changeCurrentList.bind(this);\r\n        this.creatNewList = this.creatNewList.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.changeLang = this.changeLang.bind(this);\r\n    }\r\n\r\n    listIcon = [\r\n        new Date().getHours() >= 18 || new Date().getHours() < 6 ? <i className=\"far fa-moon\"/> : <i className=\"fas fa-sun\"/>, \r\n        <i className=\"far fa-calendar-check\"/>, \r\n        <i className=\"fas fa-clipboard-list\"/>, \r\n        <i className=\"fas fa-tasks\"/>\r\n    ]\r\n\r\n    untitledListCount = 0;\r\n\r\n    changeCurrentList(event) {\r\n        if(event.target !== event.currentTarget) {\r\n            return;\r\n        }\r\n        this.props.changeCurrentList(event.currentTarget.id);\r\n    }\r\n\r\n    creatNewList() {\r\n        this.props.addList();\r\n    }\r\n\r\n    toggleForm(event) {\r\n        this.setState({ isEditing: event.currentTarget.id });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault();\r\n        this.props.updateListName(event.target.id, this.state.listName);\r\n        this.setState({ isEditing: 0, listName: \"\" });\r\n    }\r\n\r\n    handleRemove(event) {\r\n        this.props.removeList(event.currentTarget.id);\r\n    }\r\n\r\n    handleColorChange(event) {\r\n        this.props.changeColor(event.target.id);\r\n    }\r\n\r\n    changeLang(event) {\r\n        this.props.changeLang(event.target.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img\r\n                    className=\"UI-btn UI-btn-out-he\" \r\n                    src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                    onClick={() => this.props.onExpandClick()} \r\n                    style={{\r\n                        animation: this.props.expand ? \"ui-img-drop 1s forwards\" : this.props.expand !== null && \"ui-img-float 1s forwards\"\r\n                    }}\r\n                    alt=\"user-img\"\r\n                />\r\n                <div className=\"UI-he\">\r\n                    <img\r\n                        className=\"UI-btn UI-btn-in-he\" \r\n                        src={this.props.user.image === undefined || this.props.user.image === null ? \"%PUBLIC_URL%/../user-img.png\" : this.props.user.image}\r\n                        onClick={() => this.props.onExpandClick()}\r\n                        alt=\"user-img\"\r\n                    />\r\n                    <div className=\"user-name-he\">\r\n                        <h4>היי, {this.props.user.fullName}</h4>\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-secondary dropdown btn-dropdown-he\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-sliders-h\"></i>\r\n                            </button>\r\n                            <div className=\"dropdown-menu dropdown-menu-he\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <div className=\"dropdown-item dropdown-item-he color-pick\">\r\n                                    <p>בחר צבע:</p>\r\n                                    <button className=\"color-btn red\" id=\"red\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn blue\" id=\"blue\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn green\" id=\"green\" onClick={this.handleColorChange}></button>\r\n                                    <button className=\"color-btn black\" id=\"black\" onClick={this.handleColorChange}></button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <div className=\"dropdown-item dropdown-item-he lang-pick\">\r\n                                    <p>שפות:</p>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"en\" onClick={this.changeLang}>English</button>\r\n                                    <button className=\"dropdown-item dropdown-item-he\" id=\"he\" onClick={this.changeLang}>עברית</button>\r\n                                </div>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a className=\"dropdown-item dropdown-item-he\" href=\"/logout\">התנתק/י</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     {this.props.user.lists.map((list, index) => {\r\n                        let result;\r\n                        if(index < 3){\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj-he list-name\"\r\n                                onClick={this.changeCurrentList}\r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[index]} {list.name === \"Today\" ? \"היום \" : list.name === \"Planned\" ? \"מתוכננות \" : \"משימות \"}\r\n                                    </h3>\r\n                                </div>\r\n                            )\r\n                        } else if(this.state.isEditing === index.toString()) {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index}\r\n                                className=\"UI-obj-he list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <form id={index} className=\"List-edit-form-he\" onSubmit={this.handleUpdate}>\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        value={this.state.listName}\r\n                                        name=\"listName\"\r\n                                        onChange={this.handleChange}\r\n                                        maxLength=\"9\"\r\n                                        />\r\n                                        <button><i className=\"fas fa-check\"></i></button>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            result = (\r\n                                <div\r\n                                key={this.props.user.lists[index]._id} \r\n                                id={index} \r\n                                className=\"UI-obj-he list-name user-created-lists\"\r\n                                onClick={this.changeCurrentList} \r\n                                >\r\n                                    <h3 id={index} onClick={this.changeCurrentList}>\r\n                                        {this.listIcon[3]} {list.name}\r\n                                    </h3>\r\n                                    <div className=\"List-buttons-he\">\r\n                                        <button id={index} onClick={this.toggleForm}>\r\n                                            <i className=\"fas fa-pen\" />\r\n                                        </button>\r\n                                        <button id={index} onClick={this.handleRemove}>\r\n                                            <i className=\"fas fa-trash\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (result)\r\n                    })}\r\n                    <hr/>\r\n                    <div \r\n                    className=\"UI-obj-he list-name\" \r\n                    onClick={this.creatNewList} \r\n                    >\r\n                        <h3><i className=\"far fa-plus-square\"></i> רשימה חדשה</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIHe;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TodoList from \"./TodoList\";\nimport TodoListHe from \"./TodoListHe\";\nimport UI from \"./UI\";\nimport UIHe from \"./UIHe\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: null,\n      intervalIsSet: null,\n      user: null,\n      currentList: 0\n    };\n    this.create = this.create.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n    this.remove = this.remove.bind(this);\n    this.handleExpandClick = this.handleExpandClick.bind(this);\n    this.handleChangeCurrentList = this.handleChangeCurrentList.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleRemoveList = this.handleRemoveList.bind(this);\n    this.handleListNameUpdate = this.handleListNameUpdate.bind(this);\n    this.copyPlannedTodo = this.copyPlannedTodo.bind(this);\n    this.handleChangeColor = this.handleChangeColor.bind(this);\n    this.handleAlertedTodo = this.handleAlertedTodo.bind(this);\n    this.handleChangeLang = this.handleChangeLang.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getUserFromDb, 100);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  getUserFromDb = () => {\n    let getUrl = \"daymaker/\" + document.getElementById('userId').innerHTML;\n    \n    axios.get(getUrl).then((res) => {\n      this.setState({ user: res.data });\n    });\n  };\n\n  create(newTodo) {\n    let getURL = \"daymaker/putData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      todo: newTodo,\n      currentList: this.state.currentList\n    });\n  }\n\n  update(id, updatedTask) {\n    let objIdsToUpdate = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n    let [objIdToUpdate] = objIdsToUpdate;\n    let idToUpdate = objIdToUpdate._id;\n\n    let getURL = \"daymaker/updateData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      id: idToUpdate,\n      currentList: this.state.currentList,\n      update: updatedTask\n    });\n  }\n\n  toggleCompletion(id) {\n    let objIdsToUpdate = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n    let [objIdToUpdate] = objIdsToUpdate;\n    let idToUpdate = objIdToUpdate._id;\n\n    let getURL = \"daymaker/updateData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      id: idToUpdate,\n      currentList: this.state.currentList,\n      update: \"\"\n    });\n  }\n\n  remove(id, isPlannedDelete) {\n\n    if(isPlannedDelete) {\n      let getURL = \"daymaker/deleteTodo\";\n      axios.delete(getURL, {\n        data: {\n          userId: this.state.user._id,\n          id: id\n        }\n      });\n    } else {\n      let objIdsToDelete = this.state.user.lists[this.state.currentList].todos.filter(t => {return t._id === id});\n      let [objIdToDelete] = objIdsToDelete;\n      let idToDelete = objIdToDelete._id;\n\n      let getURL = \"daymaker/deleteTodo\";\n      axios.delete(getURL, {\n        data: {\n          userId: this.state.user._id,\n          id: idToDelete,\n          currentList: this.state.currentList\n        }\n      });\n    }\n  }\n\n  handleExpandClick(event) {\n    if(event === undefined) {\n      if(this.state.expand === null) {\n        this.setState({expand: true});\n      } else {\n        this.setState({expand: !this.state.expand});\n      }\n    }\n\n    if(this.state.expand === true && event !== undefined) {\n      if(event.target.id === \"expand-press\") {\n        this.setState({expand: false});\n      }\n    }\n  }\n\n  handleChangeCurrentList(newCurrentList) {\n    this.setState({currentList: newCurrentList});\n  }\n  \n  handleAddList() {\n    let getURL = \"daymaker/addList\";\n    axios.post(getURL, {\n      userId: this.state.user._id\n    });\n  }\n\n  handleListNameUpdate(listId, newListName) {\n    let getURL = \"daymaker/updateListName\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      listId: listId,\n      update: newListName\n    });\n  }\n\n  handleRemoveList(listId) {\n    let getURL = \"daymaker/deleteList\";\n    axios.delete(getURL, {\n      data: {\n        userId: this.state.user._id,\n        listId: listId\n      }\n    });\n\n    if(listId < this.state.currentList && this.state.user.lists.length !== 4) {\n      this.setState({currentList: (this.state.currentList - 1)});\n    } else {\n      this.setState({currentList: 0});\n    }\n\n    if(listId === this.state.currentList) {\n      this.setState({currentList: 0});\n    }\n  }\n\n  copyPlannedTodo(plannedTodo) {\n    let getURL = \"daymaker/copyData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      todo: plannedTodo,\n      currentList: 0\n    });\n  }\n\n  handleChangeColor(colorId) {\n    let getURL = \"daymaker/updateColor\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      colorId: colorId\n    });\n  }\n\n  handleAlertedTodo(plannedTodo) {\n    let getURL = \"daymaker/updateData\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      id: plannedTodo,\n      update: \"\"\n    });\n  }\n\n  handleChangeLang(language) {\n    let getURL = \"daymaker/changeLang\";\n    axios.post(getURL, {\n      userId: this.state.user._id,\n      language: language\n    });\n  }\n\n  render() {\n    if(this.state.user !== null){\n      this.props.setPageDir(this.state.user.language.slice(0, 2));\n      if(this.state.user.language.slice(0, 2) === \"en\") {\n        return (\n          <div className=\"main-div\" id=\"expand-press\" onClick={this.handleExpandClick} style={{\n              animation: this.state.expand ? \"slide-right 1s both\" : this.state.expand !== null && \"slide-left 1s both\"\n            }} >\n            <TodoList \n              user={this.state.user} \n              currentList={this.state.currentList}\n              create={this.create}\n              update={this.update}\n              toggleCompletion={this.toggleCompletion}\n              delete={this.remove}\n              copyPlannedTodo={this.copyPlannedTodo}\n              handleAlertedTodo={this.handleAlertedTodo}\n            />\n            <UI \n              onExpandClick={this.handleExpandClick} \n              expand={this.state.expand}\n              user={this.state.user}\n              changeCurrentList={this.handleChangeCurrentList}\n              addList={this.handleAddList}\n              updateListName={this.handleListNameUpdate}\n              removeList={this.handleRemoveList}\n              changeColor={this.handleChangeColor}\n              changeLang={this.handleChangeLang}\n            />\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"main-div\" id=\"expand-press\" onClick={this.handleExpandClick} style={{\n              animation: this.state.expand ? \"slide-left-he 1s both\" : this.state.expand !== null && \"slide-right-he 1s both\"\n            }} >\n            <TodoListHe\n              user={this.state.user} \n              currentList={this.state.currentList}\n              create={this.create}\n              update={this.update}\n              toggleCompletion={this.toggleCompletion}\n              delete={this.remove}\n              copyPlannedTodo={this.copyPlannedTodo}\n              handleAlertedTodo={this.handleAlertedTodo}\n            />\n            <UIHe\n              onExpandClick={this.handleExpandClick} \n              expand={this.state.expand}\n              user={this.state.user}\n              changeCurrentList={this.handleChangeCurrentList}\n              addList={this.handleAddList}\n              updateListName={this.handleListNameUpdate}\n              removeList={this.handleRemoveList}\n              changeColor={this.handleChangeColor}\n              changeLang={this.handleChangeLang}\n            />\n          </div>\n        );\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction handleSetPageDir(language) {\n    if(language === \"he\") {\n        document.getElementById(\"lang\").setAttribute(\"dir\", \"rtl\");\n        document.getElementById(\"lang\").setAttribute(\"lang\", \"he\");\n    } else {\n        document.getElementById(\"lang\").setAttribute(\"dir\", \"ltr\");\n        document.getElementById(\"lang\").setAttribute(\"lang\", \"en\");\n    }\n}\n\nlet userId = document.getElementById(\"userId\").innerHTML;\n\nReactDOM.render(<App userId={userId} setPageDir={handleSetPageDir} />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}